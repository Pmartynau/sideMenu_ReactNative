{"ast":null,"code":"import Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var TabButton = function TabButton(currentTab, setCurrentTab, text, icon) {\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      if (text == \"LogOut\") {} else {\n        setCurrentTab(text);\n      }\n    },\n    children: _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: 'center',\n        paddingVertical: 8,\n        backgroundColor: currentTab == text ? 'white' : 'transparent',\n        paddingLeft: 13,\n        paddingRight: 35,\n        borderRadius: 8,\n        marginTop: 15\n      },\n      children: [icon, _jsx(Text, {\n        style: {\n          fontSize: 15,\n          fontWeight: 'bold',\n          paddingLeft: 15,\n          color: currentTab == text ? \"#5359D1\" : \"white\"\n        },\n        children: text\n      })]\n    })\n  });\n};","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","TabButton","currentTab","setCurrentTab","text","icon","TouchableOpacity","onPress","children","View","style","flexDirection","alignItems","paddingVertical","backgroundColor","paddingLeft","paddingRight","borderRadius","marginTop","Text","fontSize","fontWeight","color"],"sources":["C:/Users/XPS/Desktop/taskflow/taskFlow_mobile/components/TabButton.js"],"sourcesContent":["import {Image, Text, TouchableOpacity, View} from \"react-native\";\r\nimport React from \"react\";\r\n\r\nexport const TabButton =(currentTab, setCurrentTab, text, icon)=>{\r\n    return (\r\n\r\n        <TouchableOpacity onPress={() => {\r\n            if (text == \"LogOut\") {\r\n                // Do your Stuff...\r\n            } else {\r\n                setCurrentTab(text)\r\n            }\r\n        }}>\r\n            <View style={{\r\n                flexDirection: \"row\",\r\n                alignItems: 'center',\r\n                paddingVertical: 8,\r\n                backgroundColor: currentTab == text ? 'white' : 'transparent',\r\n                paddingLeft: 13,\r\n                paddingRight: 35,\r\n                borderRadius: 8,\r\n                marginTop: 15\r\n            }}>\r\n\r\n                {/*<Image source={icon} style={{\r\n                    width: 25, height: 25,\r\n                    tintColor: currentTab == text ? \"#5359D1\" : \"white\"\r\n                }}></Image>*/}\r\n                {icon}\r\n\r\n                <Text style={{\r\n                    fontSize: 15,\r\n                    fontWeight: 'bold',\r\n                    paddingLeft: 15,\r\n                    color: currentTab == text ? \"#5359D1\" : \"white\"\r\n                }}>{text}</Text>\r\n\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n}"],"mappings":";;;;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,OAAO,IAAMC,SAAS,GAAE,SAAXA,SAASA,CAAGC,UAAU,EAAEC,aAAa,EAAEC,IAAI,EAAEC,IAAI,EAAG;EAC7D,OAEIP,IAAA,CAACQ,gBAAgB;IAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;MAC7B,IAAIH,IAAI,IAAI,QAAQ,EAAE,CAEtB,CAAC,MAAM;QACHD,aAAa,CAACC,IAAI,CAAC;MACvB;IACJ,CAAE;IAAAI,QAAA,EACER,KAAA,CAACS,IAAI;MAACC,KAAK,EAAE;QACTC,aAAa,EAAE,KAAK;QACpBC,UAAU,EAAE,QAAQ;QACpBC,eAAe,EAAE,CAAC;QAClBC,eAAe,EAAEZ,UAAU,IAAIE,IAAI,GAAG,OAAO,GAAG,aAAa;QAC7DW,WAAW,EAAE,EAAE;QACfC,YAAY,EAAE,EAAE;QAChBC,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE;MACf,CAAE;MAAAV,QAAA,GAMGH,IAAI,EAELP,IAAA,CAACqB,IAAI;QAACT,KAAK,EAAE;UACTU,QAAQ,EAAE,EAAE;UACZC,UAAU,EAAE,MAAM;UAClBN,WAAW,EAAE,EAAE;UACfO,KAAK,EAAEpB,UAAU,IAAIE,IAAI,GAAG,SAAS,GAAG;QAC5C,CAAE;QAAAI,QAAA,EAAEJ;MAAI,CAAO,CAAC;IAAA,CAEd;EAAC,CACO,CAAC;AAE3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}